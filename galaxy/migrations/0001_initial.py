# Generated by Django 2.2.24 on 2022-10-07 11:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilesToGalaxyDataLibraryParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_name', models.CharField(blank=True, max_length=200, null=True)),
                ('link2files', models.BooleanField(default=False)),
                ('local_path', models.BooleanField(default=False)),
                ('ftp', models.BooleanField(default=True, help_text='Use FTP file transfer to copy the files over to the Galaxy instance')),
                ('remove', models.BooleanField(default=False, help_text='Remove any existing data for the selected ISA projects in the  Galaxy data libraries')),
            ],
        ),
        migrations.CreateModel(
            name='GalaxyFileLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('galaxy_id', models.CharField(max_length=250)),
                ('galaxy_library', models.BooleanField(default=True)),
                ('removed', models.BooleanField(default=False, help_text='if the Galaxy file has either been purged or deleted. However the "deleted" options does not seem to be recorded correctly for ldda (library dasasets) by Galaxy so can be a bit  misleading. However if we can no longer access the  file in Bioblend then this should be set to True.')),
            ],
        ),
        migrations.CreateModel(
            name='GalaxyInstanceTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('name', models.CharField(max_length=200, unique=True)),
                ('ftp_host', models.CharField(blank=True, help_text='The ftp host and port are required if the file server and galaxy server cannot be connected either direcly or via symlink)', max_length=200, null=True)),
                ('ftp_port', models.IntegerField(blank=True, default=21, null=True)),
                ('galaxy_root_path', models.CharField(blank=True, help_text='If the Galaxy instance is accessible either via a symlink or directly, the path should be included here', max_length=500, null=True)),
                ('public', models.BooleanField(default=True, help_text='When set to true, other users will able to see and use this Galaxy instance')),
            ],
        ),
        migrations.CreateModel(
            name='GalaxyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='the email used for the Galaxy account', max_length=254)),
                ('api_key', models.CharField(max_length=200)),
                ('public', models.BooleanField(default=False, help_text='By default no other users can your Galaxy user connections')),
            ],
        ),
        migrations.CreateModel(
            name='GenericFilesToGalaxyHistoryParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('empty', models.IntegerField()),
                ('error', models.IntegerField()),
                ('failed_metadata', models.IntegerField()),
                ('new', models.IntegerField()),
                ('ok', models.IntegerField()),
                ('paused', models.IntegerField()),
                ('running', models.IntegerField()),
                ('queued', models.IntegerField()),
                ('setting_metadata', models.IntegerField()),
                ('upload', models.IntegerField()),
                ('galaxy_id', models.CharField(max_length=200)),
                ('estimated_progress', models.FloatField()),
            ],
        ),
    ]
